ingilizce olsun...butunların çerçeveleri ultra ince renkli çizgileri olsun....Build.web4 arama sayfası sadece geniş ve prestijli bir arama alanı değil, aynı zamanda etkileşimli, AI destekli gerçek zamanlı arama sonuçları ile kullanıcıdan gelen girdilere anında yanıt veren, dinamik bir web uygulaması şeklinde olmalı.  Tasarımı Geliştirme Önerileri & Örnek UI Yapısı 1. Ekran Düzeni (Layout)  ------------------------------------------------------------ | Build.web4 Logo & Slogan                                  | |                                                          | |                [ AI-powered Interactive Search Bar ]    | |                                                          | | Popular Queries (suggestions)                            | ------------------------------------------------------------ |                                                          | |        |--------------------------------------------|    | |        |                                            |    | |        |             Dynamic Search Results         |    | |        |           (List + BIM/CAD Preview +        |    | |        |            Site Status + Material Info)   |    | |        |                                            |    | |        |--------------------------------------------|    | |                                                          | |  Sponsored Ads (Footer bölümü)                           | ------------------------------------------------------------ Yani, arama girişinin hemen altında veya sağında/arasında sonuçların gerçek zamanlı ve kapsamlı şekilde listelendiği bir alan olmalı. Sonuçlar interaktif ve kategorik kartlar veya bölümler halinde. Kullanıcı yazdıkça arama sonuçları live olarak değişmeli. 2. Örnek React & TailwindCSS Bileşenleri ile Geniş Yapı Aşağıda temel bileşenler ve layout taslağı var:   import React, { useState, useEffect } from "react";  const popularQueries = [   "Find ongoing construction projects",   "Search BIM & CAD models",   "Material suppliers near me",   "Latest cost estimates",   "Real-time site management data",   "Project timelines and deadlines", ];  const dummyResults = [   {     id: "proj1",     type: "Project",     title: "Central City Tower Construction",     location: "New York, NY",     status: "In Progress",   },   {     id: "bim1",     type: "BIM Model",     title: "Residential Complex BIM",   },   {     id: "mat1",     type: "Material Supplier",     title: "Prime Cement Co.",     stock: "Available",   }, ];  export default function BuildWeb4Search() {   const [query, setQuery] = useState("");   const [results, setResults] = useState([]);    // Simulate AI powered search (replace with real API calls)   useEffect(() => {     if (query.length === 0) {       setResults([]);       return;     }     // Fake filter for demo; in reality you'd call your search backend     const filtered = dummyResults.filter(r =>       r.title.toLowerCase().includes(query.toLowerCase())     );     setResults(filtered);   }, [query]);    return (     <div className="min-h-screen bg-[#0F3D91] p-10 flex flex-col items-center text-white">       {/* Logo & Slogan */}       <header className="mb-12 text-center select-none">         <h1 className="text-5xl font-extrabold tracking-wide mb-2">Build.web4</h1>         <p className="text-lg font-light text-slate-300 max-w-xl mx-auto">           Your smart gateway to construction data.         </p>       </header>        {/* Search & Suggestions */}       <div className="w-full max-w-5xl flex flex-col gap-8">         {/* Search bar */}         <div className="flex items-center bg-[#1A49C6] rounded-xl p-4 shadow-lg backdrop-blur-md gap-4">           <input             type="text"             placeholder="Search projects, BIM models, materials..."             className="flex-grow bg-transparent outline-none py-4 px-6 rounded-md placeholder-slate-300 text-white text-lg"             value={query}             onChange={(e) => setQuery(e.target.value)}             autoFocus           />           {/* Voice, Upload, Filter buttons omitted here for brevity */}         </div>          {/* Popular Queries */}         {query.length === 0 && (           <section className="text-slate-300">             <h3 className="mb-4 text-xl font-semibold">Need help? Try our popular queries:</h3>             <ul className="grid grid-cols-1 sm:grid-cols-3 gap-3">               {popularQueries.map((q, i) => (                 <li                   key={i}                   onClick={() => setQuery(q)}                   className="cursor-pointer rounded-md bg-[#1448B8] px-6 py-3 hover:bg-[#0F3D91] transition shadow-md"                 >                   {q}                 </li>               ))}             </ul>           </section>         )}          {/* Dynamic Results */}         {query.length > 0 && (           <section className="bg-[#164BA0] rounded-xl shadow-lg p-6 max-h-[50vh] overflow-y-auto">             <h3 className="mb-4 text-xl font-semibold">Search Results for "{query}":</h3>             {results.length === 0 ? (               <p className="text-slate-300">No results found.</p>             ) : (               <ul className="space-y-4">                 {results.map((item) => (                   <li                     key={item.id}                     className="p-4 rounded-lg bg-[#1A49C6] hover:bg-[#134187] transition cursor-pointer"                   >                     <div className="flex justify-between items-center">                       <span className="font-semibold text-white">{item.title}</span>                       <span className="text-sm text-sky-300 px-2 py-1 bg-[#0F3D91] rounded-md uppercase">                         {item.type}                       </span>                     </div>                     {item.location && (                       <p className="text-slate-300 text-sm mt-1">Location: {item.location}</p>                     )}                     {item.status && (                       <p className="text-slate-300 text-sm mt-1">Status: {item.status}</p>                     )}                     {item.stock && (                       <p className="text-slate-300 text-sm mt-1">Stock Status: {item.stock}</p>                     )}                   </li>                 ))}               </ul>             )}           </section>         )}       </div>        {/* Sponsored Ads */}       <footer className="mt-auto w-full max-w-5xl pt-12 pb-6 text-center text-sm text-slate-400 select-none">         <h4 className="mb-6 text-lg font-semibold text-slate-300">Sponsored by Industry Leaders</h4>         <div className="grid grid-cols-1 md:grid-cols-3 gap-6 cursor-default">           {[             { title: "BuildTech Solutions", desc: "Innovative building automation systems." },             { title: "SteelWorks Supply", desc: "Reliable steel and metal providers." },             { title: "EcoMaterial Inc", desc: "Sustainable material sourcing experts." },           ].map(({ title, desc }, idx) => (             <div key={idx} className="rounded-xl bg-[#1A49C6] p-6 shadow-lg">               <h5 className="text-xl font-bold text-white mb-2">{title}</h5>               <p className="text-slate-300 text-sm">{desc}</p>             </div>           ))}         </div>         <p className="mt-8 text-slate-400 text-xs">           Powered by <span className="font-semibold text-sky-400">Azure</span> | web4.0os Platform         </p>       </footer>     </div>   ); } 3. Geliştirme Notları Grid + Scroll: Sonuç alanı max yükseklikte, fazla sonuçta scrollable olacak ki kullanıcı geniş ve rahat görsün. Canlı Güncelleme: input değiştikçe sonuçlar filtrelenip anlık gösterilir. Etkileşimli Önermeler: Sıfır query'de popüler sorgular öneriliyor; tıklayınca arama otomatik başlar. Kategori ve Bilgi: Her sonucun türü, lokasyon veya stok durumu gibi özel detayları gösteren kartlar. Responsive: Masaüstü geniş ekran için max-width optimize edildi. Hafif animasyonlar: Hover’larda renk yumuşatıcılığı ve tıklama efektleri ile premium UX. Bu yapı, Build.web4’ün “AI destekli interaktif sektörel web arama motoru” deneyimini çok daha zengin ve kullanışlı
süper oldu tebrikler komple sayfa koyu renk olsun..